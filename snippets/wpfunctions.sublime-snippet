<snippet>
	<content><![CDATA[
/**
 * Theme functions
 *
 * @package ${1:Package}
 */

/**
 * Theme only works in WordPress 4.7 or later.
 */
if ( version_compare( \$GLOBALS['wp_version'], '4.7-alpha', '<' ) ) {
	require get_template_directory() . '/inc/back-compat.php';
	return;
}

/**
 * Sets up theme defaults and registers support for various WordPress features.
 *
 * Note that this function is hooked into the after_setup_theme hook, which
 * runs before the init hook. The init hook is too late for some features, such
 * as indicating support for post thumbnails.
 */
function ${4:theme_name}_setup() {
	/*
	 * Make theme available for translation.
	 */
	load_theme_textdomain( '${2:textdomain}' );

	// Add default posts and comments RSS feed links to head.
	add_theme_support( 'automatic-feed-links' );

	/*
	 * Let WordPress manage the document title.
	 * By adding theme support, we declare that this theme does not use a
	 * hard-coded <title> tag in the document head, and expect WordPress to
	 * provide it for us.
	 */
	add_theme_support( 'title-tag' );

	/*
	 * Enable support for Post Thumbnails on posts and pages.
	 *
	 * @link https://developer.wordpress.org/themes/functionality/featured-images-post-thumbnails/
	 */
	add_theme_support( 'post-thumbnails' );

	// Set the default content width.
	\$GLOBALS['content_width'] = apply_filters( '${4:theme_name}_content_width', 820 );

	// This theme uses wp_nav_menu() in two locations.
	register_nav_menus( array(
		'primary' => __( 'Primary Menu', '${2:textdomain}' ),
	) );

	/*
	 * Switch default core markup for search form, comment form, and comments
	 * to output valid HTML5.
	 */
	add_theme_support( 'html5', array(
		'comment-form',
		'comment-list',
		'gallery',
		'caption',
	) );

	/*
	 * Enable support for Post Formats.
	 *
	 * See: https://codex.wordpress.org/Post_Formats
	 */
	add_theme_support( 'post-formats', array(
		'aside',
		'gallery',
		'link',
		'image',
		'quote',
		'status',
		'video',
		'audio',
		'chat',
	) );

	// Add theme support for Custom Logo.
	add_theme_support( 'custom-logo', array(
		'width'       => 250,
		'height'      => 250,
		'flex-width'  => true,
	) );

	// Add theme support for selective refresh for widgets.
	add_theme_support( 'customize-selective-refresh-widgets' );
}
add_action( 'after_setup_theme', '${4:theme_name}_setup' );

/**
 * Register custom fonts.
 */
function ${4:theme_name}_fonts_url() {
	\$fonts_url = '';

	/**
	 * Translators: If there are characters in your language that are not
	 * supported by Libre Franklin, translate this to 'off'. Do not translate
	 * into your own language.
	 */
	\$libre_franklin = _x( 'on', 'Libre Franklin font: on or off', '${2:textdomain}' );

	if ( 'off' !== \$libre_franklin ) {
		\$font_families = array();

		\$font_families[] = 'Libre Franklin:300,300i,400,400i,600,600i,800,800i';

		\$query_args = array(
			'family' => urlencode( implode( '|', \$font_families ) ),
			'subset' => urlencode( 'latin,latin-ext' ),
		);

		\$fonts_url = add_query_arg( \$query_args, 'https://fonts.googleapis.com/css' );
	}

	return esc_url_raw( \$fonts_url );
}

/**
 * Add preconnect for Google Fonts.
 *
 * @since Twenty Seventeen 1.0
 *
 * @param array  \$urls           URLs to print for resource hints.
 * @param string \$relation_type  The relation type the URLs are printed.
 * @return array \$urls           URLs to print for resource hints.
 */
function ${4:theme_name}_resource_hints( \$urls, \$relation_type ) {
	if ( wp_style_is( '${3:theme-name}-fonts', 'queue' ) && 'preconnect' === \$relation_type ) {
		\$urls[] = array(
			'href' => 'https://fonts.gstatic.com',
			'crossorigin',
		);
	}

	return \$urls;
}
add_filter( 'wp_resource_hints', '${4:theme_name}_resource_hints', 10, 2 );

/**
 * Register widget area.
 *
 * @link https://developer.wordpress.org/themes/functionality/sidebars/#registering-a-sidebar
 */
function ${4:theme_name}_widgets_init() {
	register_sidebar( array(
		'name'          => __( 'Sidebar', '${2:textdomain}' ),
		'id'            => 'sidebar-1',
		'description'   => __( 'Add widgets here to appear in your sidebar.', '${2:textdomain}' ),
		'before_widget' => '<section id="%1\$s" class="widget %2\$s">',
		'after_widget'  => '</section>',
		'before_title'  => '<h2 class="widget-title">',
		'after_title'   => '</h2>',
	) );
}
add_action( 'widgets_init', '${4:theme_name}_widgets_init' );

/**
 * Enqueue scripts and styles.
 */
function ${4:theme_name}_scripts() {
	// Add custom fonts, used in the main stylesheet.
	wp_enqueue_style( '${3:theme-name}-fonts', ${4:theme_name}_fonts_url(), array(), null );

	// Theme stylesheet.
	wp_enqueue_style( '${3:theme-name}-style', get_stylesheet_uri() );

	// Load the html5 shiv.
	wp_enqueue_script( 'html5', get_theme_file_uri( '/assets/js/html5.js' ), array(), '3.7.3' );
	wp_script_add_data( 'html5', 'conditional', 'lt IE 9' );

	if ( is_singular() && comments_open() && get_option( 'thread_comments' ) ) {
		wp_enqueue_script( 'comment-reply' );
	}
}
add_action( 'wp_enqueue_scripts', '${4:theme_name}_scripts' );

]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>wpfunctions</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.php</scope>
</snippet>
